#!/usr/bin/env python3
"""
Script simple pour tester un seul fichier ODS
"""

import os
from odf import table
from odf.opendocument import load

def test_single_ods():
    try:
        print("üß™ Test d'un fichier ODS...")
        
        # REMPLACEZ CE CHEMIN PAR CELUI DE VOTRE FICHIER ODS
        file_path = "C:/Users/Mariam Latifa DALLA/Documents/balance_2024.ods"
        
        if not os.path.exists(file_path):
            print(f"‚ùå Fichier non trouv√©: {file_path}")
            print("‚ö†Ô∏è  Modifiez le script avec le vrai chemin de votre fichier ODS")
            return False
        
        print(f"üîç Test du fichier: {file_path}")
        
        # Test de lecture ODS
        doc = load(file_path)
        tables = doc.getElementsByType(table.Table)
        print(f"üìä Tableaux trouv√©s: {len(tables)}")
        
        if not tables:
            print("‚ùå Aucun tableau trouv√© dans le fichier ODS")
            return False
        
        sheet = tables[0]
        rows = sheet.getElementsByType(table.TableRow)
        print(f"üìã Lignes trouv√©es: {len(rows)}")
        
        if not rows:
            print("‚ùå Aucune ligne trouv√©e dans le tableau")
            return False
        
        # Analyser la premi√®re ligne (en-t√™te)
        first_row = rows[0]
        cells = first_row.getElementsByType(table.TableCell)
        print(f"üîç Cellules dans la premi√®re ligne: {len(cells)}")
        
        if cells:
            print("üìù Contenu de la premi√®re ligne (en-t√™tes):")
            for i, cell in enumerate(cells):
                cell_text = ""
                for child in cell.childNodes:
                    if hasattr(child, 'data'):
                        cell_text += child.data
                    elif hasattr(child, 'text'):
                        cell_text += child.text
                print(f"  - Colonne {i}: '{cell_text.strip()}'")
        
        # Analyser quelques lignes de donn√©es
        if len(rows) > 1:
            print(f"\nüìä Analyse des lignes de donn√©es:")
            for i in range(1, min(4, len(rows))):  # Premi√®res 3 lignes de donn√©es
                row = rows[i]
                cells = row.getElementsByType(table.TableCell)
                if cells:
                    row_data = []
                    for cell in cells:
                        cell_text = ""
                        for child in cell.childNodes:
                            if hasattr(child, 'data'):
                                cell_text += child.data
                            elif hasattr(child, 'text'):
                                cell_text += child.text
                        row_data.append(cell_text.strip())
                    print(f"  - Ligne {i}: {row_data}")
                    
                    # V√©rifier si c'est une ligne de donn√©es valide
                    if row_data[0] and row_data[1]:  # Num√©ro de compte et libell√©
                        print(f"    ‚úÖ Ligne de donn√©es valide d√©tect√©e")
                    else:
                        print(f"    ‚ö†Ô∏è Ligne potentiellement vide ou en-t√™te")
        else:
            print("‚ùå Aucune ligne de donn√©es trouv√©e")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur lors de la lecture ODS: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    print("üß™ Test d'un fichier ODS...")
    print("‚ö†Ô∏è  IMPORTANT: Modifiez le script avec le vrai chemin de votre fichier ODS")
    test_single_ods()


